$(document).ready(function(){
	var mainMusic = document.getElementById("main_music"),
	foodMusic = document.getElementById("food"), 
	goMusic = document.getElementById("gameOver"); 
	var level = 60;
	var pointsPerCatch = 1;

	//Canvas stuff
	var canvas = $("#canvas")[0];
	var ctx = canvas.getContext("2d");
	var w = $("#canvas").width();
	var h = $("#canvas").height();
	
	//Lets save the cell width in a variable for easy control
	var cw = 10;
	var d;
	var food;
	var score;
	
	//Lets create the snake now
	var snake_array; //an array of cells to make up the snake
	
	function init() {
		d = "right"; //default direction
		create_snake();
		create_food(); //Now we can see the food particle
		//finally lets display the score
		score = 0;
		mainMusic.play();
		
		//Lets move the snake now using a timer which will trigger the paint function
		//every 60ms
		if(typeof game_loop != "undefined") clearInterval(game_loop);
		game_loop = setInterval(paint, level);
	}
	
	function create_snake() {
		var length = 5; //Length of the snake
		snake_array = []; //Empty array to start with
		for(var i = length-1; i>=0; i--) {
			//This will create a horizontal snake starting from the top left
			snake_array.push({x: i, y:0});
		}
	}
	
	//Lets create the food now
	function create_food() {
		food = {
			x: Math.round(Math.random()*(w-cw)/cw), 
			y: Math.round(Math.random()*(h-cw)/cw), 
		};
		//This will create a cell with x/y between 0-44
		//Because there are 45(450/10) positions accross the rows and columns
	}
	
	//Lets paint the snake now
	function paint() {
		//To avoid the snake trail we need to paint the BG on every frame
		//Lets paint the canvas now
		ctx.fillStyle = "black"; //#B0B774
		ctx.fillRect(0, 0, w, h);
		ctx.strokeStyle = "black";
		ctx.strokeRect(0, 0, w, h);
		
		//The movement code for the snake to come here.
		//The logic is simple
		//Pop out the tail cell and place it infront of the head cell
		var nx = snake_array[0].x;
		var ny = snake_array[0].y;

		//These were the position of the head cell.
		//We will increment it to get the new head position
		//Lets add proper direction based movement now
		if(d == "right") nx++;
		else if(d == "left") nx--;
		else if(d == "up") ny--;
		else if(d == "down") ny++;
		
		//Lets add the game over clauses now
		//This will restart the game if the snake hits the wall
		//Lets add the code for body collision
		//Now if the head of the snake bumps into its body, the game will restart
		if(nx == -1 || nx == w/cw || ny == -1 || ny == h/cw || check_collision(nx, ny, snake_array)) {
			clearInterval(game_loop);
			mainMusic.pause();
			goMusic.play();
			var save = confirm("Do you want to save your score?");
			if(save) {
				var name = prompt("Enter your name:");
				window.location = "http://shaheershahzad.esy.es/start_session/save_score.php?name=" +name +"&score=" +score;
				$('#canvas').hide();
				$('#gameoverMenu').hide();
			} else {
				$('#canvas').hide();
				$('#gameoverMenu').show();
			}

			//Lets organize the code a bit now.
			return;
		}
		
		//Lets write the code to make the snake eat the food
		//The logic is simple
		//If the new head position matches with that of the food,
		//Create a new head instead of moving the tail
		if(nx == food.x && ny == food.y) {
			foodMusic.play();
			var tail = {x: nx, y: ny};
			score += pointsPerCatch;
			//Create new food
			create_food();
		} else {
			var tail = snake_array.pop(); //pops out the last cell
			tail.x = nx; tail.y = ny;
		}
		//The snake can now eat the food.
		
		snake_array.unshift(tail); //puts back the tail as the first cell
		
		for(var i = 0; i < snake_array.length; i++) {
			var c = snake_array[i];
			//Lets paint 10px wide cells
			paint_cell(c.x, c.y);
		}
		
		//Lets paint the food
		paint_cell(food.x, food.y);

		//Lets paint the score
		//var score_text = "Score: " + score;
		//ctx.fillText(score_text, 5, h-5);
		var points = document.getElementById('usuario_puntos');
		points.innerHTML = score;
	}
	
	//Lets first create a generic function to paint cells
	function paint_cell(x, y) {
		ctx.fillStyle = "#9bcc99";
		ctx.fillRect(x*cw, y*cw, cw, cw);
		ctx.strokeStyle = "black";
		ctx.strokeRect(x*cw, y*cw, cw, cw);
	}
	
	function check_collision(x, y, array) {
		//This function will check if the provided x/y coordinates exist
		//in an array of cells or not
		for(var i = 0; i < array.length; i++)
		{
			if(array[i].x == x && array[i].y == y)
				return true;
		}
		return false;
	}

	var paused;
	var muted;

	function pauseGame() {
		clearInterval(game_loop);
		mainMusic.pause();
		paused = true;
	}

	function resumeGame() {
		game_loop = setInterval(paint,60);
		mainMusic.play();
		paused = false;
	}

	function restart() {
		init();
	}

	function mute() {
		mainMusic.muted = true;
		foodMusic.muted = true;
		goMusic.muted = true;
		$("#sound").addClass("mute");
		muted = true;
	}

	function unmute() {
		mainMusic.muted = false;
		foodMusic.muted = false;
		goMusic.muted = false;
		$("#sound").removeClass("mute");
		muted = false;
	}

	function cerrar_sesion(){
        $.ajax({
            url: "cerrar_sesion.php",
            success: function(data){
                if(data == "ok"){
                    window.location.href = "index.html";
                }else{
                    alert("No se ha podido cerrar la sesión");
                }       
            }
        });
    }

    function comprobar_sesion(){
		$.ajax({
			url: "comprobar_sesion.php",
			success: function(data){
				if(data == "no"){
					window.location.href = "index.html";
				}
			}
		});
	}

    function player_name(){
        var full_name = location.search.split("name=")[1]
        var name = full_name.split("%20");
        $('#nombre_usuario').html(name[0]);
    }

    function show_all_highscores(){
        $.ajax({
            url: "highscores.php",
            dataType: 'JSON',
            success: function(data){
                var table = $("#highscores_table");
				var table_html = "";
				for(var i in data){
					table_html += "<tr><td>" +data[i].nombre +"</td><td>" +data[i].score +"</td></tr>";
				}
				table.html("<center><table class='table'><tr><th colspan='2' id='highscores_title' align='center' valign='middle'>SNAKES HIGHSCORES</th></tr><tr><th>Nombre Jugador</th><th>Puntuación</th></tr>" +table_html +"</table></center>");   
            }
        });
    }
	
	//Lets add the keyboard controls now
	$(document).keydown(function(e) {
		var key = e.which;
		//We will add another clause to prevent reverse gear
		if(key == "37" && d != "right") d = "left";
		else if(key == "38" && d != "down") d = "up";
		else if(key == "39" && d != "left") d = "right";
		else if(key == "40" && d != "up") d = "down";
                else if(key == "77" && !muted) mute(); //M to mute the game
		else if(key == "77" && muted) unmute(); //M to unmute the game
                else if(key == "80" && !paused) pauseGame(); //P to pause the game
		else if(key == "80" && paused) resumeGame(); //P to resume the game
                else if(key == "81") { //Q to quit the game
                	mainMusic.pause();
                	var quit = confirm("Are you sure you want to quit?");
                	if(quit) {
                		location.reload();
                	} else {
                		if(paused){
                			mainMusic.play();
                			resumeGame();
                		}else{
                			mainMusic.play();
                		}
                	}
                }
		//The snake is now keyboard controllable
	})

	$("#start").click(function() {
		$("#menu").hide();
		$("#highscores_table").hide();
		$("#canvas").show();
		$("#points_display").show();
		init();
	});

	$("#levels").click(function() {
		$("#menu").hide();
		$("#canvas").hide();
		$("#points_display").hide();
		$("#highscores_table").hide();
		$("#level_menu").show();
	});

	$("#btn-start").click(function() {
		$("#menu").hide();
		$("#level_menu").hide();
		$("#highscores_table").hide();
		level = $("#difficulty").val();
		switch(level){
			case "60":
				pointsPerCatch = 1;
				break;
			case "50":
				pointsPerCatch = 2;
				break;
			case "40":
				pointsPerCatch = 5;
				break;
			case "30":
				pointsPerCatch = 10;
				break;
			case "20":
				pointsPerCatch = 20;
				break;
		}

		$("#canvas").show();
		$("#points_display").show();
		init();
	});

	$("#btn-return").click(function(){
		location.reload();
	});

	$("#playAgain").click(function() {
		$("#gameoverMenu").hide();
		$("#highscores_table").hide();
		$("#canvas").show();
		$("points_display").show();
		restart();
	});

	$("#mainMenu").click(function(){
		location.reload();
	});

	$("#sound").click(function() {
		if ( $( this ).attr("class") == "mute" ) {
    		$("#sound").removeClass("mute");
    		unmute();
  		} else {
    		$("#sound").addClass("mute");
    		mute();
  		}
    });

    $(window).load(function() {
    	comprobar_sesion();
      	player_name();
      	$("#menu").fadeIn("slow");
	});

	setTimeout(function() {
        $("#cargador").fadeOut(500);
    },800);

	$("#highscores").click(function(){
		$("#highscores_table").fadeIn("slow");
		show_all_highscores();
		$("#menu").hide();
		$("#back_to_main_menu").show();
	});

	$("#cerrar_sesion").click(function(){
		cerrar_sesion();
	});

	$("#cerrar_sesion").click(function(){
		cerrar_sesion();
	});

	$("#back_to_main_menu").click(function(){
		$("#menu").fadeIn("slow");
		$("#highscores_table").hide();
		$("#instructions_table").hide();
		$("#back_to_main_menu").hide();
	});

	/*$("li a").click(function(){
		$("li a.clicked").removeClass("clicked");
		$(this).addClass("clicked");
	});*/

	$("#instructions").click(function(){
		var instructions_table = $("#instructions_table");
		var table_html = "";

		table_html += ("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_Arrow_Up.png'></td><td>Move Up</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_Arrow_Down.png'></td><td>Move Down</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_Arrow_Right.png'></td><td>Move to Right</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_Arrow_Left.png'></td><td>Move to Left</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_M.png'></td><td>Mute / Unmute</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_P.png'></td><td>Pause / Resume</td></tr>")+
						("<tr><td><img height='50px' width='50px' src='img/Keys/computer_key_Q.png'></td><td>Quit Game</td></tr>");
		instructions_table.html("<center><table class='table'><tr><th colspan='2' id='instructions_title' align='center' valign='middle'>GAME INSTRUCTIONS</th></tr><tr width='50%'><th>Key</th><th>Functionality</th></tr>" +table_html +"</table></center>");
		$("#menu").hide();
		instructions_table.fadeIn("slow");
		$("#back_to_main_menu").show();
	});
})